// Generated by Selenium IDE
const { Builder, By, Key, until, Capabilities  } = require('selenium-webdriver')
const assert = require('assert')

const expectedDeployment = "apiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: kube-me\n  namespace: tiny-tenant\n  labels:\n    app: kube-me\nspec:\n  replicas: 5\n  selector:\n    matchLabels:\n      app: kube-me\n  template:\n    metadata:\n      labels:\n        app: kube-me\n    spec:\n      containers:\n        - name: kube-me\n          image: \'asawakow/kube-me:latest\'\n          resources:\n            requests:\n              cpu: 128m\n              memory: 256Mi\n            limits:\n              cpu: 256m\n              memory: 512Mi\n          env:\n            - name: PORT-NO\n              value: \'3000\'\n            - name: IMAGE\n              value: KUBE-ME\n          ports:\n            - name: http-kubeme\n              containerPort: 3000\n              protocol: TCP";
const expectedService = "apiVersion: v1\nkind: Service\nmetadata:\n  name: kube-me\n  namespace: tiny-tenant\n  labels:\n    app: kube-me\nspec:\n  type: NodePort\n  selector:\n    app: kube-me\n  ports:\n    - name: http-kubeme\n      protocol: TCP\n      port: 3000\n      targetPort: 3000\n";

const testHost = "192.168.1.98";

describe('kube-me-stateless', function() {
	this.timeout(30000)
	let driver
	let vars
	beforeEach(async function() {
		driver = await new Builder()
		.usingServer("http://"+testHost+":4444/wd/hub") 
		.forBrowser('firefox')
		.build();
		//.withCapabilities(capabilities)
		//.setChromeOptions(opts)
		vars = {}
	})
	afterEach(async function() {
		await driver.quit();
	})
	it('kube-me-stateless', async function() {
		await driver.get("http://"+testHost+":3000/");
		console.log("Testing at http://"+testHost+":3000/");
		//await driver.wait(function () {return driver.isElementPresent(webdriver.By.name("submitStateless"));}, 10000);
		await driver.findElement(By.css(".container > .btn")).click()
		console.log("linkText('STATELESS APPLICATION')).click()");
		await driver.findElement(By.linkText("STATELESS APPLICATION")).click();
		console.log("name('name')).click()");
		await driver.findElement(By.name("name")).click();
		console.log("name('name')).sendKeys('kube-me')");
		await driver.findElement(By.name("name")).sendKeys("kube-me");
		console.log("name('namespace')).click()");
		await driver.findElement(By.name("namespace")).click();
		console.log("name('namespace')).sendKeys('tiny-tenant')");
		await driver.findElement(By.name("namespace")).sendKeys("tiny-tenant");
		console.log("name('replicas')).click()");
		await driver.findElement(By.name("replicas")).click();
		console.log("name('replicas')).sendKeys('5')");
		await driver.findElement(By.name("replicas")).sendKeys("5");
		console.log("name('image')).click()");
		await driver.findElement(By.name("image")).click();
		console.log("name('image')).sendKeys('asawakow/kube-me:latest')");
		await driver.findElement(By.name("image")).sendKeys("asawakow/kube-me:latest");
		console.log("name('requestCpu')).click()");
		await driver.findElement(By.name("requestCpu")).click();
		console.log("name('requestCpu')).sendKeys('128m')");
		await driver.findElement(By.name("requestCpu")).sendKeys("128m");
		console.log("name('requestMemory')).click()");
		await driver.findElement(By.name("requestMemory")).click();
		console.log("name('requestMemory')).sendKeys('256Mi')");
		await driver.findElement(By.name("requestMemory")).sendKeys("256Mi");
		console.log("name('limitCpu')).click()");
		await driver.findElement(By.name("limitCpu")).click();
		console.log("name('limitCpu')).sendKeys('256m')");
		await driver.findElement(By.name("limitCpu")).sendKeys("256m");
		console.log("name('limitMemory')).click()");
		await driver.findElement(By.name("limitMemory")).click();
		console.log("name('limitMemory')).sendKeys('512Mi')");
		await driver.findElement(By.name("limitMemory")).sendKeys("512Mi");
		console.log("name('envs.0.name')).click()");
		await driver.findElement(By.name("envs.0.name")).click();
		console.log("name('envs.0.name')).sendKeys('PORT-NO')");
		await driver.findElement(By.name("envs.0.name")).sendKeys("PORT-NO");
		console.log("name('envs.0.value')).click()");
		await driver.findElement(By.name("envs.0.value")).click();
		console.log("name('envs.0.value')).sendKeys('3000')");
		await driver.findElement(By.name("envs.0.value")).sendKeys("3000");
		console.log("css('.fade:nth-child(1) div:nth-child(22) > .row > .btn')).click()");
		await driver.findElement(By.css(".fade:nth-child(1) div:nth-child(22) > .row > .btn")).click();
		console.log("name('envs.1.name')).click()");
		await driver.findElement(By.name("envs.1.name")).click();
		console.log("name('envs.1.name')).sendKeys('IMAGE')");
		await driver.findElement(By.name("envs.1.name")).sendKeys("IMAGE");
		console.log("name('envs.1.value')).click()");
		await driver.findElement(By.name("envs.1.value")).click();
		console.log("name('envs.1.value')).sendKeys('KUBE-ME')");
		await driver.findElement(By.name("envs.1.value")).sendKeys("KUBE-ME");
		console.log("css('.row:nth-child(3) > .btn-primary')).click()");
		await driver.findElement(By.css(".row:nth-child(3) > .btn-primary")).click();
		console.log("css('.row:nth-child(3) > .col-2 > .btn')).click()");
		await driver.findElement(By.css(".row:nth-child(3) > .col-2 > .btn")).click();
		console.log("css('.w-25:nth-child(3) > input')).click()");
		await driver.findElement(By.css(".w-25:nth-child(3) > input")).click();
		console.log("name('ports.0.name')).click()");
		await driver.findElement(By.name("ports.0.name")).click();
		console.log("name('ports.0.name')).sendKeys('http-kubeme')");
		await driver.findElement(By.name("ports.0.name")).sendKeys("http-kubeme");
		console.log("name('ports.0.number')).click()");
		await driver.findElement(By.name("ports.0.number")).click();
		console.log("name('ports.0.number')).sendKeys('3000')");
		await driver.findElement(By.name("ports.0.number")).sendKeys("3000");
		console.log("name('ports.0.protocol')).click()");
		await driver.findElement(By.name("ports.0.protocol")).click();
		console.log("name('ports.0.expose')).click()");
		await driver.findElement(By.name("ports.0.expose")).click();
		
		console.log("name('submitStateless')).click()");
		await driver.findElement(By.name("submitStateless")).click()
		//Wait for Field to update
		console.log("Delay 3 sec to field to updated");
		driver.sleep(3000);
		//await sleep(3000);
		console.log("Comparing Deployment YAML");
		let deployYaml = await driver.findElement(By.css(".fade:nth-child(1) .col:nth-child(1) .col:nth-child(1) .card-text:nth-child(1)")).getText();
		console.log(deployYaml);
		console.log(expectedDeployment);
		assert(deployYaml == expectedDeployment)
		
		console.log("Comparing Service YAML");
		let serviceYaml = await driver.findElement(By.css(".fade:nth-child(1) .col:nth-child(2) .card-text:nth-child(1)")).getText();
		console.log(serviceYaml);
		console.log(expectedDeployment);
		assert(serviceYaml == expectedService)
		
	})
})

function sleep(ms) {
	return new Promise((resolve) => {
	  setTimeout(resolve, ms);
	});
  }   
